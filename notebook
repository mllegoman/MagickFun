#include <X11/Xlib.h>
#include <X11/Xutil.h>
#include <X11/Xos.h>
#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

Display *dis;
Window win;
int screen;
GC gc;
XEvent event;


unsigned long HEX(char v[8]) { // Even though both HEX and RGB don't get used HERE >
int r, g, b;
r = 16*(v[1] - 48 - (((v[1] - 48)>>4)*7)) + v[2] - 48 - (((v[2] - 48)>>4)*7);
g = 16*(v[3] - 48 - (((v[3] - 48)>>4)*7)) + v[4] - 48 - (((v[4] - 48)>>4)*7);
b = 16*(v[5] - 48 - (((v[5] - 48)>>4)*7)) + v[6] - 48 - (((v[6] - 48)>>4)*7);
return b + (g<<8) + (r<<16);
}

unsigned long RGB(int r, int g, int b) {
return b + (g<<8) + (r<<16);
}

void init_x() {
XSetWindowAttributes *attributes;
dis=XOpenDisplay((char *)0);
screen=DefaultScreen(dis);
win=XCreateWindow(dis,DefaultRootWindow(dis),0,0,1000,700,5,CopyFromParent,CopyFromParent,CopyFromParent,CopyFromParent,attributes);
XSetStandardProperties(dis,win,"null","charmap",None,NULL,0,NULL);
XSelectInput(dis, win, ExposureMask|ButtonPressMask|KeyPressMask);
gc=XCreateGC(dis, win, 0,0);
XSetBackground(dis,gc,RGB(0,0,0));
XSetForeground(dis,gc,RGB(255,255,255));
XClearWindow(dis, win);
XMapRaised(dis, win);
}

int close_x() {

	XFreeGC(dis, gc);
	XDestroyWindow(dis,win);
	XCloseDisplay(dis);	
	exit(0);

}


int main() {
init_x();
XNextEvent(dis,&event);
XSetForeground(dis,gc,RGB(0,0,0));
XFillRectangle(dis,win,gc,0,0,1360,768);
XSetForeground(dis,gc,RGB(255,255,255));
XNextEvent(dis,&event);
unsigned char ind[1], num[3], msg[11], msg2[5];
int inc, inc2;
inc2 = 0;
num[3] = 0;
msg[0] = 'C';
msg[1] = 'r';
msg[2] = 'r';
msg[3] = 'g';
msg[4] = ' ';
msg[5] = 'r';
msg[6] = 't';
msg[7] = 'r';
msg[8] = 'n';

msg2[0] = 'S';
msg2[1] = 'p';
msg2[2] = 'a';
msg2[3] = 'c';
msg2[4] = 'e';

    for (inc = 0; inc < 52; inc++) {
    ind[0] = inc;
        if (ind[0]==32) {
        XDrawString(dis,win,gc,inc2*12+27,384,msg2,5);
        } else {
            if (ind[0]==10) {
            XDrawString(dis,win,gc,inc2*12+12,118,msg,9);
            } else {
            num[0] = ind[0]/100 + 48;
            num[1] = ind[0]%100/10 + 48;
            num[2] = ind[0]%10 + 48;
            XDrawString(dis,win,gc,inc2*12+30,inc*12,num,3);
            XDrawString(dis,win,gc,inc2*12+50,inc*12,ind,1);
            }
        }
    }
    inc2 = 1;
    for (inc = 0; inc < 52; inc++) {
        ind[0] = inc + 51;
        num[0] = ind[0]/100 + 48;
        num[1] = ind[0]%100/10 + 48;
        num[2] = ind[0]%10 + 48;
        XDrawString(dis,win,gc,inc2*12+80,inc*12,num,3);
        XDrawString(dis,win,gc,inc2*12+100,inc*12,ind,1);
    }
    inc2 = 2;
    for (inc = 0; inc < 52; inc++) {
        ind[0] = inc + 102;
        num[0] = ind[0]/100 + 48;
        num[1] = ind[0]%100/10 + 48;
        num[2] = ind[0]%10 + 48;
        XDrawString(dis,win,gc,inc2*12+130,inc*12,num,3);
        XDrawString(dis,win,gc,inc2*12+150,inc*12,ind,1);
    }
    inc2 = 3;
    for (inc = 0; inc < 52; inc++) {
        ind[0] = inc + 153;
        num[0] = ind[0]/100 + 48;
        num[1] = ind[0]%100/10 + 48;
        num[2] = ind[0]%10 + 48;
        XDrawString(dis,win,gc,inc2*12+180,inc*12,num,3);
        XDrawString(dis,win,gc,inc2*12+200,inc*12,ind,1);
    }
    inc2 = 4; 
    for (inc = 0; inc < 52; inc++) {
        ind[0] = inc + 204;
        num[0] = ind[0]/100 + 48;
        num[1] = ind[0]%100/10 + 48;
        num[2] = ind[0]%10 + 48;
        XDrawString(dis,win,gc,inc2*12+230,inc*12,num,3);
        XDrawString(dis,win,gc,inc2*12+250,inc*12,ind,1);
        if (ind[0]==255) break;
    }

XNextEvent(dis,&event);
close_x();
}



