#include <X11/Xlib.h>
#include <X11/Xutil.h>
#include <X11/Xos.h>
#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>
#include <Magick++.h>

Display *dis;
Window win;
int screen;
GC gc;
XEvent event;
KeySym key;


unsigned long HEX(char v[8]) { // Even though both HEX and RGB don't get used HERE >
int r, g, b;
r = 16*(v[1] - 48 - (((v[1] - 48)>>4)*7)) + v[2] - 48 - (((v[2] - 48)>>4)*7);
g = 16*(v[3] - 48 - (((v[3] - 48)>>4)*7)) + v[4] - 48 - (((v[4] - 48)>>4)*7);
b = 16*(v[5] - 48 - (((v[5] - 48)>>4)*7)) + v[6] - 48 - (((v[6] - 48)>>4)*7);
return b + (g<<8) + (r<<16);
}

unsigned long RGB(unsigned char r, unsigned char g, unsigned char b) {
return b + (g<<8) + (r<<16);
}

void init_x() {
XSetWindowAttributes *attributes;
dis=XOpenDisplay((char *)0);
screen=DefaultScreen(dis);
win=XCreateWindow(dis,DefaultRootWindow(dis),0,0,1300,600,5,CopyFromParent,CopyFromParent,CopyFromParent,CopyFromParent,attributes);
XSetStandardProperties(dis,win,"null","charmap",None,NULL,0,NULL);
XSelectInput(dis, win, ExposureMask|ButtonPressMask|KeyPressMask);
gc=XCreateGC(dis, win, 0,0);
XSetBackground(dis,gc,RGB(0,0,0));
XSetForeground(dis,gc,RGB(255,255,255));
XClearWindow(dis, win);
XMapRaised(dis, win);
}

int close_x() {

	XFreeGC(dis, gc);
	XDestroyWindow(dis,win);
	XCloseDisplay(dis);	
	exit(0);

}

long int smallest_factor(long int n){
long int i = 2;
    if ((n-1)&1) {
    return 2;
    }
    while(i*i<n){
    i++;
        if(n%i==0){ 
        return i;
        }
    }
return 1;
}

void write_P(){
int m = 0;
while(m<200000){
m++;
XSetForeground(dis,gc,RGB(0,0,0));
XFillRectangle(dis,win,gc,0,0,1300,600);
}
XSetForeground(dis,gc,RGB(255,255,0));
XFillRectangle(dis,win,gc,0,0,1,1);
XSetForeground(dis,gc,RGB(255,255,255));
// loading visuals
// Magick begins!
InitializeMagick(*argv);
Image image;
unsigned char pix1[] = *malloc(6323*6323*3);
unsigned char pix2[] = *malloc(8000*3090*3);
unsigned char pix3[] = *malloc(10000**3);

long int i = 1;
long int s;
unsigned char r, g, b, k;
int x, y;
char text[255];
r = 255;
g = 255;
b = 255;
    while(1){
        if(i<40000000){
        i++;
        if(!(i%300000)){
                if(g==0){
                k = 255;
                }
                if(g==255){
                k = 0;
                }
                g = k;
        }
        s = smallest_factor(i);
        XSetForeground(dis,gc,RGB(r, g, b));
        XFillRectangle(dis,win,gc,i/s/30,s/30,1,1);
        }
        while(XPending(dis)){
        XNextEvent(dis, &event);
            if (event.type==KeyPress&&XLookupString(&event.xkey,text,255,&key,0)==1){
                if (text[0]=='q') {
			    	close_x();
		    	}
            }
            if(event.type==ButtonPress){
            x = event.xbutton.x;
            y = event.xbutton.y;
            printf("%d, %d\n", x, y);
            }
        }
    }




}

int main(){
fgetc(stdin);
init_x();
fgetc(stdin);
write_P();
fgetc(stdin);
close_x();
}



